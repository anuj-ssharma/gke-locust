# TAKEN: https://github.com/GoogleCloudPlatform/distributed-load-testing-using-kubernetes/blob/master/kubernetes-config/locust-master-controller.yaml
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


kind: ReplicationController
apiVersion: v1
metadata:
  name: locust-master-test
  labels:
    name: locust-test
    role: master
spec:
  replicas: 1
  selector:
    name: locust-test
    role: master
  template:
    metadata:
      name: locust-test
      labels:
        name: locust-test
        role: master
    spec:
      containers:
        - name: locust-test
          image: <image_name>:latest
          env:
            - name: LOCUST_MODE
              value: master
            - name: STEP_MODE
              value: "false"
            - name: LOCUST_FILE
              value: some_file.py
            - name: LOCUSTS
              value: HomePageLocust
            - name: USERNAME
              value: test
            - name: PASSWORD
              value: test
            - name: TARGET_HOST
              value: http://localhost
          ports:
            - containerPort: 8080
              protocol: TCP
              name: loc-master-web
            - containerPort: 5557
              protocol: TCP
              name: loc-master-p1
            - containerPort: 5558
              protocol: TCP
              name: loc-master-p2
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
